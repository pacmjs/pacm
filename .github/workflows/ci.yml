name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable, beta]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    
    - name: Cache cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build
      run: cargo build --verbose --workspace
    
    - name: Run tests
      run: cargo test --verbose --workspace
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run check
      run: cargo check

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Run cargo audit
      run: cargo audit

  # TODO: Enable coverage reporting
  # coverage:
  #   name: Code Coverage
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Install Rust
  #     uses: dtolnay/rust-toolchain@stable
  #   - name: Install cargo-tarpaulin
  #     run: cargo install cargo-tarpaulin
  #   - name: Generate coverage
  #     run: cargo tarpaulin --verbose --workspace --timeout 120 --out Xml
  #   - name: Upload coverage to Codecov
  #     uses: codecov/codecov-action@v3

  # TODO: Enable performance benchmarks
  # benchmark:
  #   name: Performance Benchmarks
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Install Rust
  #     uses: dtolnay/rust-toolchain@stable
  #   - name: Run benchmarks
  #     run: cargo bench

  # TODO: Enable documentation checks
  # docs:
  #   name: Documentation
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Install Rust
  #     uses: dtolnay/rust-toolchain@stable
  #   - name: Check documentation
  #     run: cargo doc --no-deps --document-private-items --workspace
  #   - name: Check for broken links
  #     run: cargo install cargo-deadlinks && cargo deadlinks

# TODO: Add release automation
# release:
#   name: Release
#   runs-on: ubuntu-latest
#   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
#   needs: [test, security]
#   steps:
#   - uses: actions/checkout@v4
#   - name: Install Rust
#     uses: dtolnay/rust-toolchain@stable
#   - name: Build release
#     run: cargo build --release
#   - name: Create release
#     uses: softprops/action-gh-release@v1
#     with:
#       files: target/release/pacm*
#     env:
#       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
